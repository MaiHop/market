/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;
import BLL.VegetableBLL;
import DAL.VegetableDAL;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import DTO.Orders;
import DTO.Category;
import DTO.Vegetable;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageReader;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
/**
 *
 * @author Admin
 */
public class VegetablePanel extends javax.swing.JPanel {
    private DefaultTableModel tblVegetableModel;
    private Vegetable vegetabledelete = new Vegetable();
    private VegetableBLL vegetablebll = new VegetableBLL();
    private Vegetable vegetableUpdate = new Vegetable();
    private File file;
    private Mainform main;
    /**
     * Creates new form VegetablePanel
     */
    public VegetablePanel() {
        initComponents();
        initTable();
        LoadVegetableTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initTable() {
        tblVegetableModel = new DefaultTableModel();
        tblVegetableModel.setColumnIdentifiers(new String[] {"Image","VegetableID","CatagoryID","Catagory Name","Vegetable Name","Unit","Amount","Price"});
        tblVegetable.setModel(tblVegetableModel);
        tblVegetable.getTableHeader().setReorderingAllowed(false);
        tblVegetable.getColumnModel().getColumn(0).setCellRenderer(new ImageRender());
        tblVegetable.setRowHeight(150);
    }
    
    private class ImageRender extends DefaultTableCellRenderer{
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column){
            byte[] bytes = (byte[]) value;
            ImageIcon imageicon =  new ImageIcon(new ImageIcon(bytes).getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT));
            setIcon(imageicon);
            return this;
        }
    }
    private void LoadVegetableTable() {
        try {
            VegetableBLL bll = new  VegetableBLL();
            List<DTO.Vegetable> list = bll.LoadVegetables(WIDTH);
            tblVegetableModel.setRowCount(0);
            for (DTO.Vegetable it : list) {
                tblVegetableModel.addRow(new Object[]{
                    it.getImage(),it.getVegetableID(),it.getCatagoryID(),it.getCategory().getName(),it.getVegetable_Name(),
                    it.getUnit(), it.getAmount(), it.getPrice()
              });
            }
            tblVegetableModel.fireTableDataChanged();
        } catch (Exception e) {
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVegetable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtVege_Name = new javax.swing.JTextField();
        txtUnit = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCataID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnbrowse = new javax.swing.JButton();
        lbimage = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel5.setText("Search :");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRefreshMouseClicked(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblVegetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblVegetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVegetableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVegetable);

        jLabel1.setText("Vegetable Name :");

        jLabel2.setText("Unit :");

        jLabel3.setText("Amount :");

        jLabel4.setText("Price :");

        txtUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnitActionPerformed(evt);
            }
        });

        jLabel6.setText("Catagory ID: ");

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel11.setText("Image(<64KB):");

        btnbrowse.setText("Browse");
        btnbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbrowseActionPerformed(evt);
            }
        });

        lbimage.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setText("Nhập hàng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCataID, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(txtVege_Name)
                            .addComponent(txtUnit)
                            .addComponent(txtAmount)
                            .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbimage, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnbrowse)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 320, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)
                                .addGap(46, 46, 46)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCataID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtVege_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete)
                            .addComponent(btnRefresh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(btnbrowse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbimage, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        try {
            VegetableBLL bll = new VegetableBLL();
            List<Vegetable> list = bll.findbyname((txtSearch.getText()));

            initTable();
            for(Vegetable it : list){
                tblVegetableModel.addRow(new Object[]{
                    it.getImage(),it.getVegetableID(),it.getCatagoryID(),it.getCategory().getName(),it.getVegetable_Name(),
                    it.getUnit(), it.getAmount(), it.getPrice()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"Sản phẩm không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here

    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try{
            VegetableBLL bll = new VegetableBLL();
            List<Vegetable> list = bll.findbyname((txtSearch.getText()));

            if(list.isEmpty()){
                JOptionPane.showMessageDialog(this,"Sản phẩm không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }else{
                for(Vegetable vg : list){
                    txtCataID.setText(String.valueOf(vg.getCatagoryID()));
                    txtVege_Name.setText(vg.getVegetable_Name());
                    txtUnit.setText(vg.getUnit());
                    txtAmount.setText(String.valueOf(vg.getAmount()));
                    txtPrice.setText(String.valueOf(vg.getPrice()));
                    lbimage.setIcon(new ImageIcon(new ImageIcon(vg.getImage()).getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT)));
                    LoadVegetableTable();
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,"Tên người dùng không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRefreshMouseClicked
        // TODO add your handling code here:
        txtCataID.setText("");
        txtVege_Name.setText("");
        txtUnit.setText("");
        txtAmount.setText("");
        txtPrice.setText("");
        txtSearch.setText("");
    }//GEN-LAST:event_btnRefreshMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {
            VegetableBLL vgBLL = new VegetableBLL();
            Vegetable vg = new Vegetable();
            vg.setCatagoryID(Integer.parseInt(txtCataID.getText()));
            vg.setVegetable_Name(txtVege_Name.getText());
            vg.setUnit(txtUnit.getText());
            vg.setAmount(Integer.parseInt(txtAmount.getText()));
            vg.setPrice(Float.parseFloat(txtPrice.getText()));
            vg.setImage(Files.readAllBytes(this.file.toPath()));
            if(vgBLL.addVegetable(vg)){
                JOptionPane.showMessageDialog(main, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadVegetableTable();
            }else{
                JOptionPane.showMessageDialog(main, "Thêm thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            Logger.getLogger(VegetableGUI.class.getName()).log(Level.SEVERE, null, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        //        try {
            //
            //            Vegetable vg = new Vegetable();
            //            vg.setCatagoryID(Integer.parseInt(txtCataID.getText()));
            //            vg.setVegetable_Name(txtVege_Name.getText());
            //            vg.setUnit(txtUnit.getText());
            //            vg.setAmount(Integer.parseInt(txtAmount.getText()));
            //            vg.setPrice(Float.parseFloat(txtPrice.getText()));
            //            if(vgBLL.deleteVegetable(vg)){
                //                 JOptionPane.showMessageDialog(main, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                //                 LoadVegetableTable();
                //            }else{
                //                 JOptionPane.showMessageDialog(main, "Xóa thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                //            }
            try {
                if(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?", "Hỏi"
                    , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION){
                return;
            }
            if(vegetablebll.deleteVegetable(vegetabledelete)){
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                LoadVegetableTable();
            }
            else{
                JOptionPane.showMessageDialog(null, "Xóa thất bại");
            }
        } catch (Exception e) {
            Logger.getLogger(VegetableGUI.class.getName()).log(Level.SEVERE, null, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        //        try {
            //            VegetableBLL vgBLL = new VegetableBLL();
            //            Vegetable vg = new Vegetable();
            //            vg.setCatagoryID(Integer.parseInt(txtCataID.getText()));
            //            vg.setVegetable_Name(txtVege_Name.getText());
            //            vg.setUnit(txtUnit.getText());
            //            vg.setAmount(Integer.parseInt(txtAmount.getText()));
            //            vg.setPrice(Float.parseFloat(txtPrice.getText()));
            //            if(vgBLL.updateVegetable(vg)){
                //                 JOptionPane.showMessageDialog(main, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                //                 LoadVegetableTable();
                //            }else{
                //                 JOptionPane.showMessageDialog(main, "Cập nhật thất bại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                //            }
            try {
                Vegetable vg = new Vegetable();
                vg = this.vegetableUpdate;
                vg.setCatagoryID(Integer.parseInt(txtCataID.getText()));
                vg.setVegetable_Name(txtVege_Name.getText());
                vg.setUnit(txtUnit.getText());
                vg.setAmount(Integer.parseInt(txtAmount.getText()));
                vg.setPrice(Float.parseFloat(txtPrice.getText()));
                vg.setImage(Files.readAllBytes(this.file.toPath()));
                if(JOptionPane.showConfirmDialog(this, "Bạn có muốn cập nhật không?", "Hỏi"
                    , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION){
                return;
            }
            if(vegetablebll.updateVegetable(vegetableUpdate)){
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                LoadVegetableTable();
            }
            else{
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
            }
        } catch (Exception e) {
            Logger.getLogger(VegetableGUI.class.getName()).log(Level.SEVERE, null, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblVegetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVegetableMouseClicked
        // TODO add your handling code here:
        try {
            int row = tblVegetable.getSelectedRow();
            if(row >= 0){
                int id = (Integer) tblVegetable.getValueAt(row, 1);
                VegetableBLL bll = new VegetableBLL();
                Vegetable vg = bll.getVegetable(id);
                vegetabledelete = this.vegetablebll.getVegetable(id);
                vegetableUpdate = this.vegetablebll.getVegetable(id);
                txtCataID.setText(String.valueOf(vg.getCatagoryID()));
                txtVege_Name.setText(vg.getVegetable_Name());
                txtUnit.setText(vg.getUnit());
                txtAmount.setText(String.valueOf(vg.getAmount()));
                txtPrice.setText(String.valueOf(vg.getPrice()));
                lbimage.setIcon(new ImageIcon(new ImageIcon(vg.getImage()).getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT)));
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(main, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_tblVegetableMouseClicked

    private void txtUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnitActionPerformed

    private void btnbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbrowseActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(false);
        if(chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            this.file = chooser.getSelectedFile();
            String path = file.getAbsolutePath();
            //txtAmount.setText(path);
            ImageIcon imageicon = new ImageIcon(path);
            Image image = imageicon.getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT);
            lbimage.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_btnbrowseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnbrowse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbimage;
    private javax.swing.JTable tblVegetable;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtCataID;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUnit;
    private javax.swing.JTextField txtVege_Name;
    // End of variables declaration//GEN-END:variables
}
